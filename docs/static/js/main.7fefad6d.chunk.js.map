{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCJnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,6BAFX,oCAEW,SAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCQLO,EAVK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEzB,OACI,yBAAKc,UAAU,8CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCqBAO,EAxBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAN,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAW,WAEPxB,EAASC,GAAWwB,MAAM,SAAAC,GAEtBC,YAAY,WAERC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAKR,CAAEpB,IAEEqB,EDxBmBQ,CAAc7B,GAAhCO,EAFsB,EAEtBA,KAAMa,EAFgB,EAEhBA,QAEd,OACI,oCACI,wBAAIJ,UAAU,yCAAyChB,GAErDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEPT,EAAKE,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eACIoB,IAAKpB,EAAIC,IACLD,UEYjBqB,EA1BM,WAAO,IAAD,EAEa7C,mBAAS,CAAE,QAFxB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CACIA,cAAeA,IAEnB,6BAEA,4BAEI+C,EAAWvB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI8B,IAAK9B,EACLA,SAAUA,U,MCflCiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.7fefad6d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;","\r\n\r\nconst key = 'ZCJKeSav9pUug2Uv44TUJ2mxQMJXYzse';\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${key}`\r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'> \r\n           <img src={url} alt={title} />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    \r\n    const { data, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className='card-grid'>                \r\n                { \r\n                    data.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category ).then( imgs => {\r\n\r\n            setTimeout( () => {\r\n\r\n                console.log(imgs);\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            }, 3000);\r\n\r\n            \r\n        });\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([ 'MMA' ]);\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory \r\n                setCategories={setCategories} \r\n            />\r\n            <hr/>\r\n\r\n            <ol>\r\n            { \r\n                categories.map( category => (\r\n                    <GifGrid \r\n                        key={category} \r\n                        category={category} \r\n                    /> \r\n                ))\r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}